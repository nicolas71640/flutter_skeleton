name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
      - main

    # on: push    # Default will running for every branch.

defaults:
  run:
    working-directory: ./frontend
jobs:
  setup:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            flutter_path: /opt/hostedtoolcache/flutter
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
      fail-fast: false

    steps:
      - uses: actions/checkout@v1
      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: ${{ matrix.flutter_path }}
          key: ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v1
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable" # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub get

      # Check for any formatting issues in the code.
      - run: flutter format --set-exit-if-changed .

      # Statically analyze the Dart code for any errors.
      - run: flutter analyze .

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v1
        with:
          path: /opt/hostedtoolcache/flutter
          key:  ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable" # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub get

      # Build apk.
      - run: flutter build apk

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: frontend/build/app/outputs/apk/release/app-release.apk

  unit-test:
    needs: setup
    name: run unit test
    runs-on: ubuntu-latest
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v1
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable" # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub get

      # Run widget tests for our flutter project.
      - run: flutter test

  android-integration-test:
    needs: setup
    name: run integration test on Android emulator
    runs-on: macos-latest
    strategy:
      matrix:
        device:
          - "pixel"
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: run tests
        timeout-minutes: 30
        uses: reactivecircus/android-emulator-runner@v2
        with:
          working-directory: ./frontend
          api-level: 29
          profile: ${{ matrix.device }}
          script: |
            flutter test integration_test
