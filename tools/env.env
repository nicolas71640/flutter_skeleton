#!/bin/bash

#Source it in your .zshrc file

export PUB_CACHE="$FLUTTER_WORKSPACE_DIRECTORY/frontend/.pub-cache"
export FLUTTER_FRONTEND_WORKSPACE_DIRECTORY="$FLUTTER_WORKSPACE_DIRECTORY/frontend"
export FLUTTER_BACKEND_WORKSPACE_DIRECTORY="$FLUTTER_WORKSPACE_DIRECTORY/backend"

export CREDENTIALS_FOLDER="$FLUTTER_WORKSPACE_DIRECTORY/credentials"

alias ft="cd $FLUTTER_WORKSPACE_DIRECTORY"
alias ftf="cd $FLUTTER_FRONTEND_WORKSPACE_DIRECTORY"
alias ftb="cd FLUTTER_BACKEND_WORKSPACE_DIRECTORY"

buildServer()
{ 
    docker build -t custom_node -f $FLUTTER_BACKEND_WORKSPACE_DIRECTORY/tools/docker/node .
}
runServer() {
    docker-compose -f $FLUTTER_WORKSPACE_DIRECTORY/tools/docker/docker-compose.yml up    

    #If mongo start fail : run the command : sudo rm -rf /tmp/mongodb-27017.sock
}

importFakeCottages() {
    mongoimport --jsonArray --db myapp --collection cottages --file $FLUTTER_FRONTEND_WORKSPACE_DIRECTORY/assets/cottages.json
}

cleanDb() {
    mongo myapp --eval "db.dropDatabase()"
}

#Check if analyze and format command returns ok
checkPaulette() {
    dart format --set-exit-if-changed $FLUTTER_FRONTEND_WORKSPACE_DIRECTORY &&
        flutter analyze $FLUTTER_FRONTEND_WORKSPACE_DIRECTORY 
}

pushPaulette() {
    checkPaulette &&
        git push origin $1
}

installPaulette() {
    session=$(bw unlock --raw)

    bw sync --session $session

    credentials=$(bw get password BACKEND_GOOGLE_CREDENTIALS --session $session) &&
        rm -f $CREDENTIALS_FOLDER/credentials.json &&
        echo $credentials >>$CREDENTIALS_FOLDER/credentials.json

    tokens=$(bw get password BACKEND_GOOGLE_TOKEN --session $session) &&
        rm -f $CREDENTIALS_FOLDER/token.json &&
        echo $tokens >>$CREDENTIALS_FOLDER/token.json

    oauth_config=$(bw get password BACKEND_OAUTH_CONFIG --session $session) &&
        rm -f $CREDENTIALS_FOLDER/oauth_config.json &&
        echo $oauth_config >>$CREDENTIALS_FOLDER/oauth_config.json


    android_signkey=$(bw get password ANDROID_SIGNKEY --session $session)
    android_signkey="-----BEGIN PGP MESSAGE-----\n\n"${android_signkey// /$'\n'}"-----END PGP MESSAGE-----" &&
        rm -f $FLUTTER_FRONTEND_WORKSPACE_DIRECTORY/keys/android_signkey.asc &&
        echo -e $android_signkey >>$FLUTTER_FRONTEND_WORKSPACE_DIRECTORY/keys/android_signkey.asc


    gpg -d --passphrase arandompassphrase --batch ${FLUTTER_FRONTEND_WORKSPACE_DIRECTORY}/keys/android_signkey.asc  > ${FLUTTER_FRONTEND_WORKSPACE_DIRECTORY}/keys/debug.keystore
}
