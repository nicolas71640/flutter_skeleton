name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
      - main

    # on: push    # Default will running for every branch.


jobs:
  backend-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"
          cache-dependency-path: './backend/package-lock.json'

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: 5.0
          mongodb-port: 27017

      - name: Install mocha and chai
        run: npm install -g mocha chai
      - name: Install Dependencies
        run: npm install
      - name: Run Tests
        run: npm test
        env:
          CI: true

  frontend-setup:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./frontend
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            flutter_path: /opt/hostedtoolcache/flutter
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
      fail-fast: false

    steps:
      - uses: actions/checkout@v1
      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: ${{ matrix.flutter_path }}
          key: ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
  frontend-lint:
    needs: frontend-setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v1
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable" # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub get

      # Check for any formatting issues in the code.
      - run: flutter format --set-exit-if-changed .

      # Statically analyze the Dart code for any errors.
      - run: flutter analyze .

  frontend-build:
    needs: frontend-setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v1
        with:
          path: /opt/hostedtoolcache/flutter
          key:  ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable" # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub get

      # Build apk.
      - run: flutter build apk

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: frontend/build/app/outputs/apk/release/app-release.apk

  frontend-unit-test:
    needs: frontend-setup
    name: run unit test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v1
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable" # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub get

      # Run widget tests for our flutter project.
      - run: flutter test --coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./frontend/coverage/lcov.info
          
  frontend-android-integration-test:
    needs: frontend-build
    name: run integration test on Android emulator
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./frontend
    strategy:
      matrix:
        device:
          - "pixel"
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: run tests
        timeout-minutes: 30
        uses: reactivecircus/android-emulator-runner@v2
        with:
          working-directory: ./frontend
          api-level: 29
          profile: ${{ matrix.device }}
          script: |
            flutter test integration_test
            
  frontend-ios-integration-test:
    needs: frontend-setup
    #Create a construction matrix
    strategy:
      #Set up different configurations for a set of virtual environments
      matrix:
        device:
          - "iPhone 8 (14.4)"
          - "iPhone 11 Pro Max (14.4)"
      #When set to true, GitHub cancels all in progress jobs if any of the matrix jobs fail.
      fail-fast: false
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: "List all simulators"
        run: "ls && pwd && xcrun instruments -s"
      - name: "Start Simulator"
        run: |
          UDID=$(
            xcrun instruments -s |
            awk \
              -F ' *[][]' \
              -v 'device=${{ matrix.device }}' \
              '$1 == device { print $2 }'
          )
          xcrun simctl boot "${UDID:?No Simulator with this name found}"
      - uses: actions/checkout@v2
      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v1
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: "Run Flutter Driver tests"
        run: flutter test integration_test
