// Mocks generated by Mockito 5.2.0 from annotations
// in departments/test/features/credentials/presentation/bloc/signup_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:departments/features/credentials/domain/entities/user.dart'
    as _i5;
import 'package:departments/features/credentials/domain/repositories/credentials_repository.dart'
    as _i2;
import 'package:departments/features/credentials/domain/usecases/signup_usecase.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeCredentialsRepository_0 extends _i1.Fake
    implements _i2.CredentialsRepository {}

/// A class which mocks [SignupUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignupUseCase extends _i1.Mock implements _i3.SignupUseCase {
  MockSignupUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CredentialsRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeCredentialsRepository_0())
          as _i2.CredentialsRepository);
  @override
  _i4.Stream<_i5.User> call(String? username, String? password) =>
      (super.noSuchMethod(Invocation.method(#call, [username, password]),
          returnValue: Stream<_i5.User>.empty()) as _i4.Stream<_i5.User>);
}
