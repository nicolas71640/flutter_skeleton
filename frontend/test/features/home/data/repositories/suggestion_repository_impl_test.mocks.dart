// Mocks generated by Mockito 5.4.2 from annotations
// in avecpaulette/test/features/home/data/repositories/suggestion_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:avecpaulette/features/home/data/datasources/suggestion_service.dart'
    as _i3;
import 'package:avecpaulette/features/home/data/models/api/find_place_item_response.dart'
    as _i7;
import 'package:avecpaulette/features/home/data/models/api/find_place_request.dart'
    as _i8;
import 'package:avecpaulette/features/home/data/models/api/get_place_details_request.dart'
    as _i10;
import 'package:avecpaulette/features/home/data/models/api/get_place_details_response.dart'
    as _i9;
import 'package:avecpaulette/features/home/data/models/api/suggestion_item_response.dart'
    as _i5;
import 'package:avecpaulette/features/home/data/models/api/suggestion_request.dart'
    as _i6;
import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SuggestionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSuggestionService extends _i1.Mock implements _i3.SuggestionService {
  MockSuggestionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);
  @override
  String get sessionToken => (super.noSuchMethod(
        Invocation.getter(#sessionToken),
        returnValue: '',
      ) as String);
  @override
  String get apiKey => (super.noSuchMethod(
        Invocation.getter(#apiKey),
        returnValue: '',
      ) as String);
  @override
  _i4.Stream<List<_i5.SuggestionItemResponse>> getSuggestions(
          _i6.SuggestionRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSuggestions,
          [request],
        ),
        returnValue: _i4.Stream<List<_i5.SuggestionItemResponse>>.empty(),
      ) as _i4.Stream<List<_i5.SuggestionItemResponse>>);
  @override
  _i4.Stream<List<_i7.FindPlaceItemResponse>> findPlace(
          _i8.FindPlaceRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #findPlace,
          [request],
        ),
        returnValue: _i4.Stream<List<_i7.FindPlaceItemResponse>>.empty(),
      ) as _i4.Stream<List<_i7.FindPlaceItemResponse>>);
  @override
  _i4.Stream<_i9.GetPlaceDetailsResult> getPlaceDetails(
          _i10.GetPlaceDetailsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlaceDetails,
          [request],
        ),
        returnValue: _i4.Stream<_i9.GetPlaceDetailsResult>.empty(),
      ) as _i4.Stream<_i9.GetPlaceDetailsResult>);
}
