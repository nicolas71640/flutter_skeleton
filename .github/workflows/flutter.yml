name: Flutter CI

on:
  push:
    branches:
      - main

jobs:
  backend-unit-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v3
      - name: Install Server
        uses: ./.github/actions/install-server-action
      - name: Install mocha and chai
        run: npm install -g mocha chai
      - name: Install Dependencies
        run: npm install
      - name: Run Tests
        run: npx nyc --reporter=lcov npm run test
        env:
          CI: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./backend/coverage/lcov.info
          flags: backend

  frontend-setup:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./frontend
    strategy:
      matrix:
        os: [macos-latest]
        include:
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
      fail-fast: false

    steps:
      - uses: actions/checkout@v1
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ${{ matrix.flutter_path }}
          key: ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

  
  frontend-lint:
    needs: frontend-setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      # Cache Flutter Environment
      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v3
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      # Get flutter dependencies.
      - run: flutter pub get

      # Check for any formatting issues in the code.
      - run: flutter format --set-exit-if-changed .

      # Statically analyze the Dart code for any errors.
      - run: flutter analyze .

  frontend-build:
    needs: frontend-setup
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      # Cache Flutter Environment
      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v3
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key:  ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" 

      # Get flutter dependencies.
      - run: flutter pub get

      # Build apk.
      - run: flutter build apk --debug -v

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: frontend/build/app/outputs/apk/debug/app-debug.apk

  frontend-unit-test:
    needs: frontend-setup
    name: run unit test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      # Cache Flutter Environment
      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v3
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" 

      # Get flutter dependencies.
      - run: flutter pub get

      # Run widget tests for our flutter project.
      - run: flutter test --coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./frontend/coverage/lcov.info
          flags: frontend

  frontend-android-integration-test:
    needs: frontend-build
    name: run integration test on Android emulator
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./frontend
    strategy:
      matrix:
        device:
          - "pixel"
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
        
      # Cache Flutter Environment
      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v3
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      # Setup Server
      - name: Install Server
        uses: ./.github/actions/install-server-action
      - name: Start Server
        working-directory: ./backend
        run: DEV=1 node ./app/server.js &

      # Launch Tests and screenshots
      - name: run tests
        timeout-minutes: 30
        uses: reactivecircus/android-emulator-runner@v2
        with:
          working-directory: ./frontend
          api-level: 29
          profile: ${{ matrix.device }}
          script: | 
            flutter test integration_test --dart-define=BASE_URL=http://10.0.2.2:3000/api --dart-define=FIREBASE_ENABLED=false
            flutter drive --driver=test_driver/integration_test.dart --target=screenshots_test/screenshots_test.dart -d "emulator-5554"
      - uses: actions/upload-artifact@v1
        with:
          name: screenshots
          path: frontend/screenshots
          
  frontend-ios-integration-test:
    needs: frontend-setup
    #Create a construction matrix
    strategy:
      #Set up different configurations for a set of virtual environments
      matrix:
        device:
          - "iPhone 8 Simulator (15.2)"
          - "iPhone 11 Simulator (15.2)"
      #When set to true, GitHub cancels all in progress jobs if any of the matrix jobs fail.
      fail-fast: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      # Start Emulator
      - name: "List all simulators"
        run: "xcrun xctrace list devices"
      - name: "Start Simulator"
        run: |
          UDID=$(xcrun xctrace list devices | grep "^${{ matrix.device }}" | awk '{gsub(/[()]/,""); print $NF}')
          echo $UDID
          xcrun simctl boot "${UDID:?No Simulator with this name found}"

      # Cache Flutter Environment
      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v3
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Setup Server
      - name: Install Server
        uses: ./.github/actions/install-server-action
      - name: Start Server
        working-directory: ./backend
        run: DEV=1 node ./app/server.js &

      # Launch tests
      - name: "Run Flutter Driver tests"
        run: flutter test integration_test --dart-define=BASE_URL=http://localhost:3000/api --dart-define=FIREBASE_ENABLED=false
        working-directory: ./frontend
