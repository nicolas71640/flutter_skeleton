name: Flutter CI

on:
  push:
    branches:
      - "**" # matches every branch

jobs:
  backend-unit-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"
          cache-dependency-path: './backend/package-lock.json'

      - name: Install
        run: npm install

      - name: Run Tests
        env:
          CI: true
          MONGO_URL: "mongodb://localhost:27017/myapp"
          CREDENTIALS_FOLDER: ${{ github.workspace }}/fake_credentials
        run: npx nyc --reporter=lcov npm run test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: backend/coverage/lcov.info
          flags: backend

  frontend-setup:
    runs-on: ubuntu-latest
    container:
      image: nicolas71640/docked_flutter
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: $(dirname $PUB_CACHE)

  frontend-lint:
    needs: frontend-setup
    runs-on: ubuntu-latest
    container:
      image: nicolas71640/docked_flutter
    defaults:
      run:
        working-directory: ./frontend
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: $(dirname $PUB_CACHE)

      # Check for any formatting issues in the code.
      - run: dart format --set-exit-if-changed .

      # Statically analyze the Dart code for any errors.
      - run: flutter analyze .

  frontend-build:
    needs: frontend-setup
    runs-on: ubuntu-latest
    container:
      image: nicolas71640/docked_flutter
    defaults:
      run:
        working-directory: ./frontend
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      # Cache Flutter Environment
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: $(dirname $PUB_CACHE)

      # Cache gradle
      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      # Build apk.
      - run: flutter build apk

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: frontend/build/app/outputs/flutter-apk/app-release.apk

  frontend-unit-test:
    needs: frontend-setup
    runs-on: ubuntu-latest
    container:
      image: nicolas71640/docked_flutter
    defaults:
      run:
        working-directory: ./frontend
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      # Cache Flutter Environment
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: $(dirname $PUB_CACHE)

      # Run widget tests for our flutter project.
      - run: flutter test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./frontend/coverage/lcov.info
          flags: frontend

  android-integration-tests:
    name: Android Integration Tests
    runs-on: macos-latest #Need to be macos for hardware acceleration
    strategy:
      matrix:
        device:
          - "pixel"
    defaults:
      run:
        working-directory: ./frontend
    steps:      
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - name: Setup Docker on macOS
        uses: ./.github/actions/setup-docker-action
        with:
          network: true

      - name: Install Server
        uses: ./.github/actions/install-server-action

      - run: colima list

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
 
      - run: flutter build apk # Need this to decrease test duration (12 minutes timeout issue)

      # Launch Tests and screenshots
      - name: run tests
        timeout-minutes: 30
        uses: Wandalen/wretry.action@master
        with:
          attempt_limit: 3
          action: reactivecircus/android-emulator-runner@v2
          with: |
            working-directory: ./frontend
            api-level: 29
            profile: ${{ matrix.device }}
            target: google_apis
            script: |
              flutter test integration_test/tests --verbose --dart-define=BASE_URL=http://10.0.2.2:3000/api --dart-define=FIREBASE_ENABLED=false

      - name: Create backend logs
        if: always()
        run: | 
          docker logs -t mongo > mongo.log
          docker logs -t server > server.log

      #Upload Artifacts
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: mongo_${{ github.job }}.log
          path: ./frontend/mongo.log
          
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: server_${{ github.job }}.log
          path: ./frontend/server.log


#  frontend-ios-integration-testt:
#    needs: frontend-setup
#    #Create a construction matrix
#    strategy:
#      #Set up different configurations for a set of virtual environments
#      matrix:
#        device:
#          - "iPhone 8 Simulator"
#      #When set to true, GitHub cancels all in progress jobs if any of the matrix jobs fail.
#      fail-fast: false
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v4

#      # Start Emulator
#      - name: "List all simulators"
#        run: "xcrun xctrace list devices"
#      - name: "Start Simulator"
#        run: |
#          UDID=$(xcrun xctrace list devices | grep "^${{ matrix.device }}" | awk '{gsub(/[()]/,""); print $NF}')
#          echo $UDID
#          xcrun simctl boot "${UDID:?No Simulator with this name found}"

#      # Cache Flutter Environment
#      - name: Cache Flutter
#        id: cache-flutter
#        uses: actions/cache@v3
#        with:
#          path: /Users/runner/hostedtoolcache/flutter
#          key: ${{ runner.os }}-flutter
#      - uses: subosito/flutter-action@v2
#        with:
#          channel: 'stable'
#
#      # Build
#      - name: "Build Ipa"
#        run: |
#          ls
#          ls ios/
#          flutter build ios --simulator --target=integration_test/tests/credentials_test.dart || true
#          ls ios/
#          cat ios/Podfile
#        working-directory: ./frontend

#      # Setup Server
#      - name: Install Server
#        uses: ./.github/actions/install-server-action
#      - name: Start Server
#        working-directory: ./backend
#        env:
#          CREDENTIALS_FOLDER: ${{ github.workspace }}/fake_credentials
#        run: |
#          mongoimport --jsonArray --db myapp --collection cottages --file ../frontend/assets/cottages.json
#          ((DEV=1 node ./app/index.js) &> backend.log) &

#      # Launch tests
#      - name: "Run Flutter Driver tests"
#        run: flutter test integration_test/tests --dart-define=BASE_URL=http://localhost:3000/api --dart-define=FIREBASE_ENABLED=false
#        working-directory: ./frontend

#      #Upload Artifacts
#      - uses: actions/upload-artifact@v1
#        if: always()
#        with:
#          name: backend_${{ github.job }}.log
#          path: backend/backend.log
